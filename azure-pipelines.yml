trigger:
  branches:
    include:
      - main

pool:
  name: 'Default'

steps:

# Step 2: Create a virtual environment and install dependencies
- script: |
    python -m venv antenv
    call antenv\Scripts\activate
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Create Virtual Environment and Install Dependencies'

# Step 3: Create ZIP package using ArchiveFiles
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
    replaceExistingArchive: true
  displayName: 'Archive Application Files'

# Step 4: Publish artifact
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'
    publishLocation: 'Container'
  displayName: 'Publish Build Artifacts'

# Step 5: Deploy to Azure App Service
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'ScannerAppConnection'  # Azure DevOps service connection
    appType: 'webApp'
    appName: 'ScannerApp'  # Azure App Service name
    package: '$(Build.ArtifactStagingDirectory)/app.zip'
  displayName: 'Deploy Flask App to Azure'
